batch

# define an ejb outbound socket binding (called "remote-ejb") to point to pfpCore server
# allows gwt-console-server web app to invoke ejb services from pfp-core
/socket-binding-group=ha-sockets/remote-destination-outbound-socket-binding=remote-ejb/:add(port=${pfp.core.remoting.port},host=${pfp.core.host.name},fixed-source-port=false)

/profile=ha/subsystem=logging/periodic-rotating-file-handler=FILE/:write-attribute(name=append,value=false)

# pfpServicesTest:  enable TRACE logging of org.jboss.as.ee.structure to indicate whether client-side jboss-ejb-client.xml config is being parsed
/profile=ha/subsystem=logging/logger=org.jboss.as.ee.structure/:add(category=org.jboss.as.ee.structure,level=TRACE,use-parent-handlers=true)
/profile=ha/subsystem=logging/logger=org.jboss.bpm.report/:add(category=org.jboss.bpm.report,level=TRACE,use-parent-handlers=true)

 # skip excessive guvnor logging
/profile=ha/subsystem=logging/logger=org.apache.jackrabbit.core/:add(category=org.apache.jackrabbit.core.TransientRepository,level=WARN,use-parent-handlers=true)
/profile=ha/subsystem=logging/logger=org.drools.xml/:add(category=org.drools.xml.ExtensibleXmlParser,level=FATAL,use-parent-handlers=true)


# using previously defined jdbc-driver, configure XA datasource for guvnor
/profile=ha/subsystem=datasources/xa-data-source=guvnor-cp-xa:add(jndi-name=java:/global/guvnor-cp-xa,driver-name=${jdbc.module.name},user-name=${guvnor_db_user},password=${guvnor_db_password},max-pool-size=5,min-pool-size=1,xa-datasource-class=${guvnor.xa.datasource.class})
/profile=ha/subsystem=datasources/xa-data-source=guvnor-cp-xa/xa-datasource-properties=ServerName/:add(value=${guvnor_db_ip})
/profile=ha/subsystem=datasources/xa-data-source=guvnor-cp-xa/xa-datasource-properties=DatabaseName/:add(value=guvnor)
/profile=ha/subsystem=datasources/xa-data-source=guvnor-cp-xa:enable()

# using previously defined jdbc-driver, configure non-XA datasource for guvnor
/profile=ha/subsystem=datasources/data-source=guvnor-cp:add(jndi-name=java:/global/guvnor-cp,connection-url=${guvnor_connection_url},driver-class=${guvnor_driver_class},driver-name=${jdbc.module.name},user-name=${guvnor_db_user},password=${guvnor_db_password},pool-name=guvnor_ds_pool,max-pool-size=5,min-pool-size=1)
/profile=ha/subsystem=datasources/data-source=guvnor-cp:enable()

# now that brms-webs is started, create a "remote-outbound-connection" which uses :
#   1)  previously defined "remote-ejb" outbound-socket-binding
#   2)  previously defined "ejb-security-realm"
#   3)  the user name associated with the base64 hash defined in "ejb-security-realm"
#
#   NOTE:  in your 'client' server, include a jboss-ejb-client.xml config that references this 'remote-ejb-connection' defined here
/profile=ha/subsystem=remoting/remote-outbound-connection=remote-ejb-connection/:add(outbound-socket-binding-ref=remote-ejb,username=${pfp.core.remoting.user.name},security-realm=ejb-security-realm)
/profile=ha/subsystem=remoting/remote-outbound-connection=remote-ejb-connection/property=SASL_POLICY_NOANONYMOUS:add(value=false)
/profile=ha/subsystem=remoting/remote-outbound-connection=remote-ejb-connection/property=SSL_ENABLED:add(value=false)

#########################################################################################################################################



# configure brms-webs server group
/server-group=${brms.webs.group}/:add(profile=ha,socket-binding-group=ha-sockets)

# add system property to support pfpServicesTest
/server-group=${brms.webs.group}/system-property=org.jboss.processFlow.test.absolutePathToBpmn/:add(value=${org.jboss.processFlow.test.absolutePathToBpmn},boot-time=true)

# add system property to birt reporting
/server-group=${brms.webs.group}/system-property=org.jbpm.report.engine.dir/:add(value=${org.jbpm.report.dir},boot-time=true)

# add system property such that jbpm5 bpm-console TaskFormDispatcher can find brms-webs
/server-group=${brms.webs.group}/system-property=jbpm.conf.dir/:add(value=${jbpm.conf.dir},boot-time=true)

/server-group=${brms.webs.group}/system-property=org.jboss.processFlow.colocated.pfp.services/:add(value=false,boot-time=true)

deploy ${console.server.zipped} --name=${console.server.name} --server-groups=brms-webs-group
deploy ${console.zipped} --name=${console.name} --server-groups=brms-webs-group
run-batch
