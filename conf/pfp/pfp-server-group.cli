batch
/profile=pfpCore/subsystem=datasources/data-source=ExampleDS/:disable
/profile=pfpCore/subsystem=datasources/data-source=ExampleDS/:remove
/profile=pfpCore/subsystem=ejb3/:write-attribute(name=enable-statistics,value=true)

/profile=pfpCore/subsystem=logging/periodic-rotating-file-handler=FILE/:write-attribute(name=append,value=false)
/profile=pfpCore/subsystem=logging/logger=org.quartz/:add(category=org.quartz,level=TRACE,use-parent-handlers=true)

# filter out all jbpm5 related log messages related to its inability to correctly parse BPMN2 as per :
#   https://community.jboss.org/message/784580?tstart=0
/profile=pfpCore/subsystem=logging/periodic-rotating-file-handler=FILE:update-properties(filter={"not" => {"match"=>BPMN20.xsd|dc:Point|bpmn2:tFormalExpression|bpmn2:definitions}})

# queues to support jbpm functionality
# these queues are just references to the actual queues maintained in the remote 'ha' server group
# Async KnowledgeSession queue
/profile=pfpCore/subsystem=messaging/hornetq-server=default/jms-queue=${org.jboss.processFlow.ksession.queue}/:add(entries=["queue/${org.jboss.processFlow.ksession.queue}","java:jboss/exported/jms/${org.jboss.processFlow.ksession.queue}"],durable=true)

# BAM queue
/profile=pfpCore/subsystem=messaging/hornetq-server=default/jms-queue=${org.jboss.processFlow.bam.queue}/:add(entries=["queue/${org.jboss.processFlow.bam.queue}","java:jboss/exported/jms/${org.jboss.processFlow.bam.queue}"],durable=true)

run-batch

batch
# setup remote-outbound-connection called 'remote-ha-group-ejb-connection' and reference in jboss-ejb-client.xml
/profile=pfpCore/subsystem=remoting/remote-outbound-connection=remote-ha-group-ejb-connection/:add(outbound-socket-binding-ref=remote-ejb,username=${pfp.core.remoting.user.name},security-realm=ha-timer-ejb-security-realm)
/profile=pfpCore/subsystem=remoting/remote-outbound-connection=remote-ha-group-ejb-connection/property=SASL_POLICY_NOANONYMOUS:add(value=false)
/profile=pfpCore/subsystem=remoting/remote-outbound-connection=remote-ha-group-ejb-connection/property=SSL_ENABLED:add(value=false)


### jta/non-XA datasource connection pools to jbpm and jbpm_bam databases
##  can get away with using a non-XA datasource for jbpm / jbpm_bam databases due to Last Resource Commit optimization of JBoss Transaction Manager
/profile=pfpCore/subsystem=datasources/data-source=jbpm-core-cp:add(jndi-name=java:jboss/datasources/jbpm-core-cp,connection-url="${jbpm_connection_url}",driver-class=${jbpm_driver_class},driver-name=${jdbc.module.name},user-name=${jbpm_db_user},password=${jbpm_db_password},pool-name=jbpm-core_ds_pool,max-pool-size=50,min-pool-size=0,jta=true,allocation-retry=12,allocation-retry-wait-millis=10000)
/profile=pfpCore/subsystem=datasources/data-source=jbpm-core-cp/:write-attribute(name=new-connection-sql,value="${org.jboss.processFlow.connection.test}")
/profile=pfpCore/subsystem=datasources/data-source=jbpm-core-cp:enable()

/profile=pfpCore/subsystem=datasources/data-source=jbpm-bam-cp:add(jndi-name=java:jboss/datasources/jbpm-bam-cp,connection-url="${bam_connection_url}",driver-class=${bam_driver_class},driver-name=${jdbc.module.name},user-name=${bam_db_user},password=${bam_db_password},pool-name=jbpm-bam_ds_pool,max-pool-size=50,min-pool-size=0,jta=true,allocation-retry=12,allocation-retry-wait-millis=10000)
/profile=pfpCore/subsystem=datasources/data-source=jbpm-bam-cp/:write-attribute(name=new-connection-sql,value="${org.jboss.processFlow.connection.test}")
/profile=pfpCore/subsystem=datasources/data-source=jbpm-bam-cp:enable()

### non-jta/non-XA datasource connection pools to jbpm database for Quartz requirements
/profile=pfpCore/subsystem=datasources/data-source=jbpm-core-cp-non-jta:add(jndi-name=java:jboss/datasources/jbpm-core-cp-non-jta,connection-url="${jbpm_connection_url}",driver-class=${jbpm_driver_class},driver-name=${jdbc.module.name},user-name=${jbpm_db_user},password=${jbpm_db_password},pool-name=jbpm-core_ds_pool,max-pool-size=5,min-pool-size=1,jta=false,allocation-retry=12,allocation-retry-wait-millis=10000)
/profile=pfpCore/subsystem=datasources/data-source=jbpm-core-cp-non-jta/:write-attribute(name=new-connection-sql,value="${org.jboss.processFlow.connection.test}")
/profile=pfpCore/subsystem=datasources/data-source=jbpm-core-cp-non-jta:enable()


# create pfpCore server group and start
/server-group=${pfp.core.group}/:add(profile=pfpCore,socket-binding-group=full-sockets)


###  pfp-core-group system properties
/server-group=${pfp.core.group}/system-property=organization.name/:add(value=${organization.name},boot-time=true)
/server-group=${pfp.core.group}/system-property=org.jboss.enableLog/:add(value=${org.jboss.enableLog},boot-time=true)

/server-group=${pfp.core.group}/system-property=org.jboss.processFlow.task.transactionType/:add(value=${org.jboss.processFlow.task.transactionType},boot-time=true)
/server-group=${pfp.core.group}/system-property=org.jboss.processFlow.tasks.DeadlineHandler/:add(value=${org.jboss.processFlow.tasks.DeadlineHandler},boot-time=true)
/server-group=${pfp.core.group}/system-property=org.jboss.processFlow.tasks.TaskEventListeners/:add(value=${org.jboss.processFlow.tasks.TaskEventListeners},boot-time=true)
/server-group=${pfp.core.group}/system-property=org.jboss.processFlow.task.enableIntelligentMapping/:add(value=${org.jboss.processFlow.task.enableIntelligentMapping},boot-time=true)
/server-group=${pfp.core.group}/system-property=org.jboss.processFlow.kAgentMonitor/:add(value=${org.jboss.processFlow.kAgentMonitor},boot-time=true)
/server-group=${pfp.core.group}/system-property=org.jboss.processFlow.kAgentRefreshHours/:add(value=${org.jboss.processFlow.kAgentRefreshHours},boot-time=true)

/server-group=${pfp.core.group}/system-property=org.jboss.processFlow.KnowledgeSessionPool/:add(value=${org.jboss.processFlow.KnowledgeSessionPool},boot-time=true)
/server-group=${pfp.core.group}/system-property=org.jboss.processFlow.statefulKnowledge.enableKnowledgeRuntimeLogger/:add(value=${org.jboss.processFlow.statefulKnowledge.enableKnowledgeRuntimeLogger},boot-time=true)
/server-group=${pfp.core.group}/system-property=space.delimited.process.event.listeners/:add(value=${space.delimited.process.event.listeners},boot-time=true)
/server-group=${pfp.core.group}/system-property=task.clean.up.process.event.listener.impl/:add(value=${task.clean.up.process.event.listener.impl},boot-time=true)
/server-group=${pfp.core.group}/system-property=org.jboss.processFlow.drools.resource.scanner.interval/:add(value="${org.jboss.processFlow.drools.resource.scanner.interval}",boot-time=true)
/server-group=${pfp.core.group}/system-property=org.jboss.processFlow.space.delimited.change.set.urls/:add(value="${org.jboss.processFlow.space.delimited.change.set.urls}",boot-time=true)
/server-group=${pfp.core.group}/system-property=org.jbpm.workItemHandler.mail.address/:add(value="${org.jbpm.workItemHandler.mail.address}",boot-time=true)
/server-group=${pfp.core.group}/system-property=org.jbpm.workItemHandler.mail.port/:add(value="${org.jbpm.workItemHandler.mail.port}",boot-time=true)
/server-group=${pfp.core.group}/system-property=org.jbpm.workItemHandler.mail.userId/:add(value="${org.jbpm.workItemHandler.mail.userId}",boot-time=true)
/server-group=${pfp.core.group}/system-property=org.jbpm.workItemHandler.mail.password/:add(value="${org.jbpm.workItemHandler.mail.password}",boot-time=true)


/server-group=${pfp.core.group}/system-property=org.jboss.processFlow.bam.queue/:add(value=${org.jboss.processFlow.bam.queue},boot-time=true)

# enabled until JBAS014803: Duplicate resource [(\"system-property\" => \"hibernate.hbm2ddl.auto\")] problem is corrected in pfp-core-server.cli
/server-group=${pfp.core.group}/system-property=hibernate.hbm2ddl.auto/:add(value=${hibernate.hbm2ddl.auto},boot-time=true)

/server-group=${pfp.core.group}/system-property=hibernate.jdbc.batch_size/:add(value=${hibernate.jdbc.batch_size},boot-time=true)
/server-group=${pfp.core.group}/system-property=hibernate.cache.use_second_level_cache/:add(value=${hibernate.cache.use_second_level_cache},boot-time=true)
/server-group=${pfp.core.group}/system-property=hibernate.dialect/:add(value=${hibernate.dialect},boot-time=true)
/server-group=${pfp.core.group}/system-property=hibernate.show_sql/:add(value=${hibernate.show_sql},boot-time=true)

/server-group=${pfp.core.group}/system-property=jbpm.conf.dir/:add(value=${jbpm.conf.dir},boot-time=true)
/server-group=${pfp.core.group}/system-property=drools.session.template.path/:add(value=${drools.session.template.path},boot-time=true)
/server-group=${pfp.core.group}/system-property=drools.timerService/:add(value=${drools.timerService},boot-time=true)

/server-group=${pfp.core.group}/system-property=org.quartz.properties/:add(value="${org.quartz.properties}",boot-time=true)
/server-group=${pfp.core.group}/system-property=org.jboss.processFlow.knowledgeService.useJPAPlaceholderResolverStrategy/:add(value=${org.jboss.processFlow.knowledgeService.useJPAPlaceholderResolverStrategy},boot-time=true)


# deploy pfp services related to jbpm5 to pfp-core server group
deploy ${temp.pfp.services.dir}/processFlow-knowledgeSessionService.jar --name=processFlow-knowledgeSessionService.jar --server-groups=${pfp.core.group}
deploy ${temp.pfp.services.dir}/processFlow-taskService.jar --name=processFlow-taskService.jar --server-groups=${pfp.core.group}
deploy ${temp.pfp.services.dir}/processFlow-bamService.jar --name=processFlow-bamService.jar --server-groups=${pfp.core.group}
deploy ${temp.pfp.services.dir}/processFlow-knowledgeSessionService-web.war --name=processFlow-knowledgeSessionService-web.war --server-groups=${pfp.core.group}
#deploy ${temp.pfp.services.dir}/processFlow-pfpRest-web.war --name=processFlow-pfpRest-web.war --server-groups=${pfp.core.group}

run-batch


